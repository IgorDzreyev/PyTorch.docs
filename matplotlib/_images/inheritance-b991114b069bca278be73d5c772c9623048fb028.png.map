<map id="inheritance796647343e" name="inheritance796647343e">
<area shape="rect" id="node1" href="#matplotlib.ticker.AutoLocator" target="_top" title="Dynamically find major tick positions. This is actually a subclass" alt="" coords="441,3,531,24"/>
<area shape="rect" id="node2" href="#matplotlib.ticker.MaxNLocator" target="_top" title="Find nice tick locations with no more than N being within the view limits." alt="" coords="248,21,345,41"/>
<area shape="rect" id="node21" href="#matplotlib.ticker.LogitLocator" target="_top" title="Determine the tick locations for logit axes" alt="" coords="440,38,532,58"/>
<area shape="rect" id="node3" href="#matplotlib.ticker.AutoMinorLocator" target="_top" title="Dynamically find minor tick positions based on the positions of" alt="" coords="234,55,359,76"/>
<area shape="rect" id="node4" href="#matplotlib.ticker.Locator" target="_top" title="Determine the tick locations;" alt="" coords="118,194,179,214"/>
<area shape="rect" id="node8" href="#matplotlib.ticker.FixedLocator" target="_top" title="Tick locations are fixed. &#160;If nbins is not None," alt="" coords="250,90,343,110"/>
<area shape="rect" id="node13" href="#matplotlib.ticker.IndexLocator" target="_top" title="Place a tick on every multiple of some base number of points" alt="" coords="248,125,345,145"/>
<area shape="rect" id="node14" href="#matplotlib.ticker.LinearLocator" target="_top" title="Determine the tick locations" alt="" coords="246,159,347,180"/>
<area shape="rect" id="node19" href="#matplotlib.ticker.LogLocator" target="_top" title="Determine the tick locations for log axes" alt="" coords="255,194,338,214"/>
<area shape="rect" id="node22" href="#matplotlib.ticker.MultipleLocator" target="_top" title="Set a tick on each integer multiple of a base within the view interval." alt="" coords="241,229,352,249"/>
<area shape="rect" id="node24" href="#matplotlib.ticker.NullLocator" target="_top" title="No ticks" alt="" coords="254,263,339,284"/>
<area shape="rect" id="node25" href="#matplotlib.ticker.OldAutoLocator" target="_top" title="[*Deprecated*] On autoscale this class picks the best MultipleLocator to set the" alt="" coords="240,298,352,319"/>
<area shape="rect" id="node30" href="#matplotlib.ticker.SymmetricalLogLocator" target="_top" title="Determine the tick locations for symmetric log axes." alt="" coords="214,333,378,353"/>
<area shape="rect" id="node5" href="#matplotlib.ticker.EngFormatter" target="_top" title="Format axis values using engineering prefixes to represent powers" alt="" coords="247,367,346,388"/>
<area shape="rect" id="node6" href="#matplotlib.ticker.Formatter" target="_top" title="Create a string based on a tick value and location." alt="" coords="111,541,186,561"/>
<area shape="rect" id="node7" href="#matplotlib.ticker.FixedFormatter" target="_top" title="Return fixed strings for tick labels based only on position, not value." alt="" coords="242,402,350,423"/>
<area shape="rect" id="node9" href="#matplotlib.ticker.FormatStrFormatter" target="_top" title="Use an old&#45;style (&#39;%&#39; operator) format string to format the tick." alt="" coords="227,437,365,457"/>
<area shape="rect" id="node11" href="#matplotlib.ticker.FuncFormatter" target="_top" title="Use a user&#45;defined function for formatting." alt="" coords="244,472,349,492"/>
<area shape="rect" id="node12" href="#matplotlib.ticker.IndexFormatter" target="_top" title="[*Deprecated*] Format the position x to the nearest i&#45;th label where ``i = int(x + 0.5)``." alt="" coords="241,506,352,527"/>
<area shape="rect" id="node15" href="#matplotlib.ticker.LogFormatter" target="_top" title="Base class for formatting ticks on a log or symlog scale." alt="" coords="247,541,346,561"/>
<area shape="rect" id="node20" href="#matplotlib.ticker.LogitFormatter" target="_top" title="Probability formatter (using Math text)." alt="" coords="243,576,350,596"/>
<area shape="rect" id="node23" href="#matplotlib.ticker.NullFormatter" target="_top" title="Always return the empty string." alt="" coords="246,610,347,631"/>
<area shape="rect" id="node26" href="#matplotlib.ticker.OldScalarFormatter" target="_top" title="[*Deprecated*] Tick location is a plain old number." alt="" coords="228,645,365,665"/>
<area shape="rect" id="node27" href="#matplotlib.ticker.PercentFormatter" target="_top" title="Format numbers as a percentage." alt="" coords="235,680,358,700"/>
<area shape="rect" id="node28" href="#matplotlib.ticker.ScalarFormatter" target="_top" title="Format tick values as a number." alt="" coords="239,714,354,735"/>
<area shape="rect" id="node29" href="#matplotlib.ticker.StrMethodFormatter" target="_top" title="Use a new&#45;style format string (as used by `str.format`) to format the tick." alt="" coords="226,749,367,770"/>
<area shape="rect" id="node10" href="#matplotlib.ticker.TickHelper" target="_top" title="TickHelper" alt="" coords="3,367,83,388"/>
<area shape="rect" id="node16" href="#matplotlib.ticker.LogFormatterExponent" target="_top" title="Format values for log axis using ``exponent = log_base(value)``." alt="" coords="407,524,565,544"/>
<area shape="rect" id="node17" href="#matplotlib.ticker.LogFormatterMathtext" target="_top" title="Format values for log axis using ``exponent = log_base(value)``." alt="" coords="409,558,563,579"/>
<area shape="rect" id="node18" href="#matplotlib.ticker.LogFormatterSciNotation" target="_top" title="Format values following scientific notation in a logarithmic axis." alt="" coords="594,558,765,579"/>
</map>
